<!doctype html>
<html>
<head>
<meta charset="gb2312">
<title>表单验证</title>
</head>

<body>
//创建一个表单，要求可以保存、恢复和验证其中的值
//form:方法 save resume validate

//组合模式 
//Composite:方法 add remove getChild

<script>
//组合类
	
var CompositeForm=function(id,method,action){
	this.formComponents=[];
	
	this.element=document.createElement('form');
	this.element.id=id;
	this.element.method=method||"POST";
	this.element.action=action||"#";	
}

CompositeForm.prototype.add=function(child){
	this.formComponents.push(child);
	this.element.appendChild(child.getElement());	
}

CompositeForm.prototype.remove=function(child){
	for(var i=0,len=this.formComponents.length;i<len;i++){
		if(this.formComponents[i]==child){
			this.formComponents.splice(i,1);//移除当前的元素
			break;	
		}
	}
}

CompositeForm.prototype.getChild=function(i){
	return this.formComponents[i];
}

CompositeForm.prototype.save=function(){
	for(var i=0,len=this.formComponents.length;i<len;i++){
		this.formComponents[i].save();	
	}	
}

CompositeForm.prototype.getElement=function(){
	return this.element;	
}


//抽象类 父类
var Field=function(id){
	this.id=id;	
	this.element;
}
Field.prototype.add=function(){}
Field.prototype.remove=function(){}
Field.prototype.getChild=function(){}
Field.prototype.save=function(){
	setCookie(this.id,this.getValue());	
}
Field.prototype.getElement=function(){
	return this.element;	
}
Field.prototype.getValue=function(){
	throw new Error("不支持在类Field上操作");	
}





//input子类

var InputField=function(id,label){
	Field.call(this,id);
	
	this.input=document.createElement('input');
	this.input.id=id;
	
	this.label=document.createElement('label');
	var labelTextNode=document.createTextNode(label);
	this.label.appendChild(labelTextNode);
	
	
	this.element=document.createElement('div');
	this.element.className='input-field';
	this.element.appendChild(this.label);
	this.element.appendChild(this.input);	
}

extend(InputField,Field);

InputField.prototype.getValue=function(){
	return this.input.value;	
}

//textarea 子类
var TextareaField=function(id,label){
	Field.call(this,id);
	
	this.textarea=document.createElement('textarea');
	this.textarea.id=id;
	
	this.label=document.createElement('label');
	var labelTextNode=document.createTextNode(label);
	this.label.appendChild(labelTextNode);
	
	this.element=document.createElement('div');
	this.element.className='textarea-field';
	this.element.appendChild(this.label);
	this.element.appendChild(this.textarea);
		
}
extend(TextareaField,Field);

TextareaField.prototype.getValue=function(){
	return this.textarea.value;	
}

//select 子类
var SelectField=function(id,label){
	Field.call(this,id);
	
	this.select=document.createElement('select');
	this.select.id=id;
	
	this.label=document.createElement('label');
	var labelTextNode=document.createTextNode(label);
	this.label.appendChild(labelTextNode);
	
	this.element=document.createElement('div');
	this.element.className='select-field';
	this.element.appendChild(this.label);
	this.element.appendChild(this.select);
}
extend(SelectField,Field);

SelectField.prototype.getValue=function(){
	return this.select.options[this.select.selectedIndex].value;	
}



//使用方法
var contactForm=new CompositeForm("contact-form","POST","contact.php");

contactForm.add(new InputField('first-name','姓'));
contactForm.add(new InputField('last-name','名'));
contactForm.add(new InputField('address','地址'));
contactForm.add(new InputField('tel','电话'));
contactForm.add(new InputField('city','城市'));

contactForm.add(new SelectField('state','国家',stateArray));

contactForm.add(new InputField('zip','邮编'))
contactForm.add(new TextareaField('comments','评论'))

addEvent(window,'unload',contactForm.save);



Field.prototype.restore=function(){
	this.element.value=getCookie(this.id);	
}
CompositeForm.prototype.restore=function(){
	for(var i=0,len=this.formComponents.length;i<len;i++){
		
		this.formComponents[i].restore();	
	}	
}

addEvent(window,'load',contactForm.restore);


//向层次体系中添加类
var CompositeFieldset=function(id,legendText){
	this.components={};
	
	this.element=document.createElement('fieldset');
	this.element.id=id;
	
	if(legendText){
		this.legend=document.createElement('legend');
		this.legend.appendChild(document.createTextNode(legendText));
		this.element.appendChild(this.legend);	
	}	
};

CompositeFieldset.prototype.add=function(child){
	this.components[child.getElement().id]=child;
	this.element.appendChild(child.getElement());	
}

CompositeFieldset.prototype.remove=function(child){
	delete this.components[child.getElement().id];	
}

CompositeFieldset.prototype.getChild=function(id){
	if(this.components[id]!==undefined){
		return this.components[id];	
	}
	return null;
}

CompositeFieldset.prototype.save=function(){
	for(var id in this.components){
		if(!this.components.hasOwnProperty(id))continue;
		this.components[id].save();	
	}	
}

CompositeFieldset.prototype.restore=function(){
	for(var id in this.components){
		if(!this.components.hasOwnProperty(id))continue;
		this.components[id].restore();
	}	
}

CompositeFieldset.prototype.getElement=function(){
	return this.element;	
}

</script>
</body>
</html>
